import * as tslib_1 from "tslib";
import { ChangeDetectorRef, ContentChild, Directive, ElementRef } from '@angular/core';
import { proxyInputs } from '../proxies';
import { VirtualFooter } from './virtual-footer';
import { VirtualHeader } from './virtual-header';
import { VirtualItem } from './virtual-item';
var VirtualScroll = /** @class */ (function () {
    function VirtualScroll(el, cd) {
        this.el = el;
        this.cd = cd;
        el.nativeElement.nodeRender = this.nodeRender.bind(this);
        proxyInputs(this, this.el.nativeElement, [
            'approxItemHeight',
            'approxHeaderHeight',
            'approxFooterHeight',
            'headerFn',
            'footerFn',
            'items',
            'itemHeight'
        ]);
    }
    VirtualScroll.prototype.nodeRender = function (el, cell, index) {
        if (!el) {
            var view = this.itmTmp.viewContainer.createEmbeddedView(this.getComponent(cell.type), { $implicit: null, index: index }, index);
            el = getElement(view);
            el['$ionView'] = view;
        }
        var node = el['$ionView'];
        var ctx = node.context;
        ctx.$implicit = cell.value;
        ctx.index = cell.index;
        node.detectChanges();
        return el;
    };
    VirtualScroll.prototype.getComponent = function (type) {
        switch (type) {
            case 0: return this.itmTmp.templateRef;
            case 1: return this.hdrTmp.templateRef;
            case 2: return this.ftrTmp.templateRef;
        }
        throw new Error('template for virtual item was not provided');
    };
    tslib_1.__decorate([
        ContentChild(VirtualItem),
        tslib_1.__metadata("design:type", VirtualItem)
    ], VirtualScroll.prototype, "itmTmp", void 0);
    tslib_1.__decorate([
        ContentChild(VirtualHeader),
        tslib_1.__metadata("design:type", VirtualHeader)
    ], VirtualScroll.prototype, "hdrTmp", void 0);
    tslib_1.__decorate([
        ContentChild(VirtualFooter),
        tslib_1.__metadata("design:type", VirtualFooter)
    ], VirtualScroll.prototype, "ftrTmp", void 0);
    VirtualScroll = tslib_1.__decorate([
        Directive({
            selector: 'ion-virtual-scroll',
            inputs: [
                'approxItemHeight',
                'approxHeaderHeight',
                'approxFooterHeight',
                'headerFn',
                'footerFn',
                'items',
                'itemHeight'
            ]
        }),
        tslib_1.__metadata("design:paramtypes", [ElementRef,
            ChangeDetectorRef])
    ], VirtualScroll);
    return VirtualScroll;
}());
export { VirtualScroll };
function getElement(view) {
    var rootNodes = view.rootNodes;
    for (var i = 0; i < rootNodes.length; i++) {
        if (rootNodes[i].nodeType === 1) {
            return rootNodes[i];
        }
    }
    return null;
}
